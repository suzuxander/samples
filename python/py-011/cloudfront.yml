Resources:
  SampleBucketPolicy:
    Properties:
      Bucket: !Ref 'SampleOriginBucket'
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt 'SampleOriginAccessIdentity.S3CanonicalUserId'
            Resource: !Join
              - /
              - - !GetAtt 'SampleOriginBucket.Arn'
                - '*'
    Type: AWS::S3::BucketPolicy
  SampleDistribution:
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: 'true'
          LambdaFunctionAssociations:
            - EventType: viewer-request
              LambdaFunctionARN: !Sub
                - ${FUNCTION_ARN}:8
                - FUNCTION_ARN: !ImportValue 'sample-lambda-edge-function-arn'
          TargetOriginId: !Sub 'S3-${SampleOriginBucket}'
          ViewerProtocolPolicy: redirect-to-https
        Enabled: 'true'
        Origins:
          - DomainName: !Sub '${SampleOriginBucket}.s3.amazonaws.com'
            Id: !Sub 'S3-${SampleOriginBucket}'
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${SampleOriginAccessIdentity}'
    Type: AWS::CloudFront::Distribution
  SampleOriginAccessIdentity:
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: sample-lambda-edge
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
  SampleOriginBucket:
    Properties:
      BucketName: !Sub 'sample-origin-bucket-${AWS::AccountId}'
    Type: AWS::S3::Bucket
Transform: AWS::Serverless-2016-10-31
